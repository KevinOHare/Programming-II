/**
 * 
 */
package NHSsystemTests;

// import resources
import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import NHSsystem.Patient;

/**
 * Class to tes the Patient Class
 * 
 * @author chrismcclune

 */
public class PatientTest {
	
	// Test data
		String title;
		String firstName;
		String lastName;
		String street;
		String city;
		String postcode;
		String contactNumber;
		String nhsNumber;
		int triage;
		boolean isEmergencyCondition;
		boolean inRoom;
		int countTimer;

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
	}

	/**
	 * Test method for default constructor
	 */
	@Test
	public void testPatientDefaultConstructor() {
		Patient pat = new Patient();
		assertNotNull(pat);
	}

	/**
	 * Test method for non default constructor
	 */
	@Test
	public void testPatientNonDefaultConstructor() {
		Patient pat = new Patient(title, firstName, lastName, street, city, postcode, contactNumber, nhsNumber, triage, isEmergencyCondition);
		assertEquals(title, pat.getTitle());
		assertEquals(firstName, pat.getFirstName());
		assertEquals(lastName, pat.getLastName());
		assertEquals(street, pat.getStreet());
		assertEquals(city, pat.getCity());
		assertEquals(postcode, pat.getPostcode());
		assertEquals(contactNumber, pat.getContactNumber());
		assertEquals(nhsNumber, pat.getNhsNumber());
		assertEquals(triage, pat.getTriage());
		assertEquals(isEmergencyCondition, pat.isEmergencyCondition());
	}

	/**
	 * Test method for Get and Set of NHS number
	 */
	@Test
	public void testGetSetNhsNumber() {
		Patient pat = new Patient();
		pat.setNhsNumber(nhsNumber);
		assertEquals(nhsNumber, pat.getNhsNumber());
	}

	/**
	 * Test method for Get and Set of Triage category
	 */
	@Test
	public void testGetSetTriage() {
		Patient pat = new Patient();
		pat.setTriage(triage);
		assertEquals(triage, pat.getTriage());
	}

	/**
	 * Test method for {@link NHSsystem.Patient#getCountTimer()}.
	 */
	@Test
	public void testGetSetCountTimer() {
		Patient pat = new Patient();
		pat.setCountTimer(countTimer);
		assertEquals(countTimer, pat.getCountTimer());
	}

	/**
	 * Test method for {@link NHSsystem.Patient#getInRoom()}.
	 */
	@Test
	public void testGetSetInRoom() {
		Patient pat = new Patient();
		pat.setInRoom(inRoom);
		assertEquals(countTimer, pat.getCountTimer());
	}

	/**
	 * Test method for {@link NHSsystem.Patient#setEmergencyCondition(boolean)}.
	 */
	@Test
	public void testGetSetEmergencyCondition() {
		Patient pat = new Patient();
	}

	/**
	 * Test method for {@link NHSsystem.Patient#getPatientMin()}.
	 */
	@Test
	public void testGetSetPatientMin() {
		Patient pat = new Patient();
	}


	/**
	 * Test method for {@link NHSsystem.Patient#getAllergy()}.
	 */
	@Test
	public void testGetSetAllergy() {
		Patient pat = new Patient();
	}

	/**
	 * Test method for {@link NHSsystem.Patient#getBloodType()}.
	 */
	@Test
	public void testGetSetBloodType() {
		Patient pat = new Patient();
	}


	/**
	 * Test method for {@link NHSsystem.Patient#compareTo(NHSsystem.Patient)}.
	 */
	@Test
	public void testCompareTo() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link NHSsystem.Patient#isEmergencyCondition()}.
	 */
	@Test
	public void testIsEmergencyCondition() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link NHSsystem.Patient#toString()}.
	 */
	@Test
	public void testToString() {
		fail("Not yet implemented");
	}

}
